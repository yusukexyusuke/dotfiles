include xhtml.snip

snippet boot
options word
<div class="container">
    <div class="row">
        <div class="col-xs-12">
        </div><!-- /.col -->
    </div><!-- /.row -->
</div><!-- /.container -->


snippet co
options word
	<!-- /${0} -->


snippet php
options word
	<?php	${0} ;?>

snippet c
options word
	/**
	 * $0
	 */

snippet class
options word
	class ${1:class_name}
	{
		${0}
	}

snippet function
options word
	${1:public }function ${2:function_name}(${3})
	{
		${0}
	}

snippet con
options word
	function __construct(${1})
	{
		${0}
	}

snippet def
options word
	${1}defined('${2}')${3}

snippet if
options word
	if (${1:condition}) {
		${0}
	}

snippet else
options word
	else {
		${0}
	}

snippet ifelse
options word
	if (${1:condition}) {
		${2}
	} else {
		${3}
	}

snippet elseif
options word
	elseif (${1:condition}) {
		${0}
	}

snippet for
options word
	for ($${1:i}=${2}; $${1:i} < ${3}; $${1:i}++) {
		${0}
	}

snippet fore
options word
	foreach ($${1} as $${2}${3: =>} $${4}) {
		${0}
	}

snippet while
options word
	while (${1}) {
		${0}
	}

snippet switch
options word
	switch (${1}) {
	case '${2}':
		${3}
		break;
	${0}
	default:
		${4}
		break;
	}

snippet case
options word
	case '${1}':
		${2}
		break;

snippet do
options word
	do {
		${0}
	} while (${1});

snippet if?
options word
	$${1} = (${2}) ? ${3} : ${4} ;${5}

snippet here
options word
	<<<${1:EOF}
	${2}
	$1;

# --------------------------------------------------
# 配列関係
# --------------------------------------------------
snippet arr
options word
	'${1}' => '${2}',

snippet array
options word
	array('${1}' => '${2}' )

snippet arrvar
options word
	$${1} = array('${2}' => '${3}'),

snippet arrvarRe
options word
  '${1:key}' => array(
    '${2:key}' => '${3:value}'
  )${0}

snippet arrhash
options word
  $${1:varialbe}['${2:key1}']['${3:key2}']


snippet throw
options word
	throw new ${1}Exception(${2:"${3:Error Processing Request}"}${4:});
	${5}

snippet echo
options word
	echo "${1}"${2};

snippet inc
options word
	include '${1}';${2}

snippet inco
options word
	include_once '${1}';${2}

snippet req
options word
	require '${1}';${2}

snippet reqo
options word
	require_once '${1}';${2}

snippet ret
options word
	return${1};${2}

snippet retf
options word
	return false;

snippet rett
options word
	return true;

snippet gloabals
options word
	\$GLOBALS['${1}']${2: = }${3}${4:;}${5}

snippet cookie
options word
	\$_COOKIE['${1}']

snippet env
options word
	\$_ENV['${1}']

snippet files
options word
	\$_FILES['${1}']

snippet get
options word
	\$_GET['${1}']

#snippet post
#options word
#	\$_POST['${1}']

snippet request
options word
	\$_REQUEST['${1}']

snippet server
options word
	\$_SERVER['${1}']

snippet session
options word
	\$_SESSION['${1}']

snippet pecho
options word
	<?php echo ${1} ?>${2}

snippet echoh
options word
	<?php echo htmlentities(${1}, ENT_QUOTES, 'utf-8') ?>${2}



# c : Controller
# m : Model
# p : <?php
# e : echo
# h : Htmlヘルパー
# f : Formヘルパー

# --------------------------------------------------
# Controller
# --------------------------------------------------
snippet controller
options word
	<?php
	class ${1}Controller extends ${3:AppController} {

		public $name = '${2}';
		public $uses = null;
		// public $scaffold;
		// public $view = 'Theme';
		// public $theme = '';
		// public $layout = 'default';
		// public $components = array();
		// public $helpers = array();

		function index() {
		${0}
		}
	}
#
# this系
#----------------------------------

snippet this
options word
	$this->${0}

snippet thisdouble
options word
	$this->${1}->${0}

snippet thisread
options word
	$this->${1:model}->read()

snippet thissave
options word
	$this->${1:model}->save(${1:#:})

snippet thisrequestis
options word
	$this->request->is(${1:#:var})

snippet thisrequestdata
options word
	$this->request->data

snippet thissetflash
options word
	$this->Session->setFlash('${1}');

snippet thisset
options word
  $this->set('${1:name}', ${2:value});

snippet thisredirect
alias tredirect
options word
    $this->redirect(array('controller' => '${1:controller_name}', 'action' => '${2:action_name}'));

snippet thiselement
alias tredirect
options word
    $this->element('${1}');


# --------------------------------------------------
# Model
# --------------------------------------------------
snippet model
options word
	class ${1:singular_name} extends ${2:AppModel} {

		public $validate = array(

		);
		${0}
	}

snippet mhasone
options word
    var $hasOne = array(
        '${1:model_name}' => array(
            'className' => '${2:model_name}',
            'foreignKey' => '${3}',
            'conditions' => array(),    // 該当レコードに追加する検索条件
            'fields' => array(),        // 該当フィールド名
            'dependent' => false,       // 自分を削除した場合にアソシエーション側も削除する場合はtrue。
        ),
    );
    ${0}

snippet mhasmeny
options word
    var $hasMany = array(
        '${1:model_name}' => array(
            'className' => '${2:model_name}',
            'foreignKey' => '${3}', // 自分（モデル）のどのカラムが上記モデルの外部キーとなっているか
            // 'conditions' => array(), // 該当レコードに追加する検索条件
            // 'fields' => array(), // 該当フィールド名
            // 'order' => array('' => 'desc/asc'), // 並び替え絵を行うフィールド
            // 'limit' => 10, // 取得したいレコード最大数
            // 'offset' => 5, // スキップするレコード数
            // 'dependent' => true, // 自分を削除した場合にアソシエーション側も削除する場合true
            // 'exclusive' => false, // deleteAllによって一括で削除を行いたい場合はtrue
            // 'finderQuery' => '', // find時に独自のSQLが必要な場合に指定する
        ),
    );
    ${0}



snippet mbelongsto
options word
    var $belongsTo = array(
        '${1:model_name}' => array(
            'className' => '${2:model_name}',
            'foreignKey' => '${3}',		// 自分のどのカラムが上記モデルの外部キーとなっているか
            'conditions' => array(),	// 該当レコードに追加する検索条件
            'fields' => array(),		// 該当フィールド名
            'dependent' => false,		// 自分を削除した場合にアソシエーション側も削除する場合はtrue。
        ),
    );
    ${0}

snippet mfind
options word
    $this->${1:model_name}->find(
        '${2:all/first/count/list/threaded/neighbours}',
        array(
            'conditions' => array(
                '${3:where_column}' => ${4:where_condition},
            ),
            // 'fields' => array('',''),
            // 'fields' => array('sum(hoge_count) as "Hoge.hoge_count"'),
            // 'limit' => 10,
            // 'order' => array('Model.col' => 'desc/asc'),
            // 'recursive' => -1,
        )
    );
    ${0}



snippet mv
options word
	'${1:field_name}' => array(
		'rule' => '${2:rule}',
		'message' => '${3:error_message}',
		// 'required' => true, /* 必須*/
		// 'allowEmpty' => true, /* 空文字の許可*/
		// 'last' => false, /* そのエラーが発生した時点で以降のバリデーションは打ち切り */
		// 'on' => 'update', /* 'create'か'update'時にバリデーションを限定する */
	),
    ${0}

snippet mvrnotempty
options word
    'rule' => 'notEmpty',${0}

snippet mvrblank
options word
    'rule' => 'blank',${0}

snippet mvrnumeric
options word
    'rule' => 'numeric',${0}

snippet mvralphanumeric
options word
    'rule' => 'alphaNumeric',${0}

snippet mvrboolean
options word
    'rule' => 'boolean',${0}

snippet mvrdecimal
options word
    'rule' => array('decimal', ${1:number_of_decimal_places}),${0}

snippet mvrminlength
options word
    'rule' => array('minLength', ${1:length}),${0}

snippet mvrmaxlength
options word
    'rule' => array('maxLength', ${1:length}),${0}

snippet mvrbetween
options word
    'rule' => array('between', ${1:min<=}, ${2:<=max}),${0}

snippet mvrrange
options word
    'rule' => array('range', ${1:min<}, ${2:<max}),${0}

snippet mvrinlist
options word
    'rule' => array('inList', array(${1:value}, ${2:value})),${0}

snippet mvrcomparison
options word
    'rule' => array('comparison', '${1:>/</>=/<=/==/!=}', ${2:value}),${0}

snippet mvrequalto
options word
    'rule' => array('equalTo', '${1:value}'),${0}

snippet mvremail
options word
    'rule' => 'email',${0}

snippet mvrextension
options word
    'rule' => array('extension', ${1:array('gif', 'jpeg', 'png', 'jpg')}),${0}

snippet mvrip
options word
    'rule' => array('ip', '${1:ipv4/ipv6/both}'),${0}

snippet mvrmoney
options word
    'rule' => array('money', '${1:left/right}'),${0}

snippet mvrmultiplein
options word
    'rule' => array('multiple', array(${1:value_list})),${0}

snippet mvrmultiplecount
options word
    'rule' => array('multiple', array('min' => ${1:min_selected}, 'max' => ${2:max_selected})),${0}

snippet mvrurl
options word
    'rule' => 'url',${0}

snippet mvrcustom
options word
    'rule' => array('custom', '${1:/regex/}'),${0}

snippet mvrregex
options word
    'rule' => array('custom', '${1:/regex/}'),${0}

snippet mvrcreditcard
options word
    'rule' => array('cc', '${1:fast/all/amex/diners/jcb/mc/visa}', ${2:true}),${0}

snippet mvrcc
options word
    'rule' => array('cc', '${1:fast/all/amex/diners/jcb/mc/visa}', ${2:true}),${0}

snippet mvrdate
options word
    'rule' => array('date', '${1:ymd}'),${0}

snippet mvrtime
options word
    'rule' => 'time',${0}

snippet msave
options word
    $this->${1:model_name}->save( ${2:array_data}, ${3:true}, ${4:array_validate_fields})${0}

# --------------------------------------------------
# log
# --------------------------------------------------
snippet logrequest
options word
    $this->log(print_r($this->request->data, true));

snippet log
options word
    $this->log();
# --------------------------------------------------
# View
# --------------------------------------------------
snippet pelement
options word
    <?php e($this->element('${1:element_name}')); ?>${0}


# --------------------------------------------------
# Html helper
# --------------------------------------------------
snippet pehdoctype
options word
    <?php echo $html->doctype('${1:html4-strict/html4-trans/html4-frame/xhtml-strict/xhtml-trans/xhtml-frame/xhtml11}'); ?>${0}

snippet pehmeta
options word
    <?php echo $html->meta('${1:keywords/description}', '{$2:content}'); ?>${0}

snippet pehfavicon
options word
    <?php echo $html->meta('icon', '/favicon.ico'); ?>${0}

snippet pehcharset
options word
    <?php echo $html->charset('${1:UTF-8}'); ?>${0}

snippet pehcss
options word
    <?php echo $html->css('${1:css_name}'); ?>${0}

snippet pehscript
options word
    <?php echo $html->script('${1:js_name}', array('inline' => ${2:true})); ?>${0}

snippet pehscriptcode
options word
	<?php echo $html->scriptStart(array('inline' => ${1:true}, 'safe' => ${2:true})); ?>${0}
	$(function(){
	${1}
	});
	<?php echo $html->scriptEnd(); ?>
	${0}

#
# テキストにリンク
###########################
snippet linktextS
options word
    <?php echo $this->Html->link('${1:title}', '${2:url}'); ?>${0}

snippet linktextL
options word
    <?php echo $this->Html->link('${1:title}', array('controller' => '${2:controller}', 'action' => '${3:action}')) ;?>${0}

snippet linktextconfirm
options word
    <?php echo $this->Html->link('${1:title}', array('controller' => '${2:controller}', 'action' => '${3:action}'), '${6:confirm_text}') ); ?>${0}

#
# 変数にリンク
###########################
snippet linkvarS
options word
    <?php echo $this->Html->link($${1:title}['${2:#:key1}']['${3:#:key2}'], '${4:url}'); ?>

snippet linkvarL
options word
    <?php echo $this->Html->link(${1:title}, array('controller' => '${2:controller}', 'action' => '${3:action}'));?>${0}

snippet linkvarconfirm
options word
    <?php echo $this->Html->link(${1:title}, array('controller' => '${2:controller}', 'action' => '${3:action}', '${6:confirm_text}') ); ?>${0}

#
# 画像貼る
###########################

snippet linkimg
options word
    <?php echo $this->Html->link($this->Html->image('${1:path from /img}', array('alt' => '${2}')), array('controller' => '${3:controller}', 'action' => '${4:action}', 'admin' => ${5:false} ), array('escape' => ${6:false})); ?>${0}

#snippet pehlink
#options word
#    <?php e( $html->link('${1:title}', array('controller' => '${2:controller}', 'action' => '${3:action}', 'admin' => ${4:false} ), array('escape' => ${5:true})) ); ?>${0}

#snippet pehlink_url
#options word
#    <?php echo( $html->link('${1:title}', '${2:url}', array('escape' => ${3:false})) ); ?>${0}

#snippet pehlink_url
#options word
#    <?php echo( $html->link('${1:title}', '${2:url}', array('escape' => ${3:false})) ); ?>${0}

#snippet pehlink_img
#options word
#    <?php e( $html->link($html->image('${1:path from /img}', array('alt' => '${2}')), array('controller' => '${3:controller}', 'action' => '${4:action}', 'admin' => ${5:false} ), array('escape' => ${6:false})) ); ?>${0}


#snippet pehimg
#options word
#    <?php echo $html->image('${1:path from /img}', array('alt' => '${2}' ,'url' => '${3}')); ?>${0}

snippet img
options word
    <?php echo $this->Html->image('${1:path from /img}', array('alt' => '${2}' ,'url' => '${3}')); ?>

snippet pehtag
options word
    <?php echo $html->tag('${1:tag_name}', ${2:inner_html}, array('escape' => ${3:false}, ${4:attribute})); ?>


# --------------------------------------------------
# Form helper
# --------------------------------------------------
snippet formcreate
options word
    <?php echo $this->Form->create(); ?>${0}

snippet formcreatemodel
options word
    <?php echo $this->Form->create('${1:model_name}'); ?>${0}

snippet formdetail
options word
    <?php echo $this->Form->create('url' => array('controller' => '${1:controller_name}', 'action' => '${2:action_name}', 'admin' => false), 'id' => '${3:id_name}'); ?>${0}

snippet formend
options word
    <?php echo $this->Form->end('${1}'); ?>${0}

snippet forminput
options word
    <?php echo $this->Form->input('${1:field_name}');?>${0}


snippet formtext
options word
    <?php echo $this->Form->input('${1:field_name}', array('type' => 'text', 'maxLength' => ${2:max_length}, 'label' => false , 'error' => ${3:false}, 'class' => '${4:class_name}')); ?>${0}

snippet formpassword
options word
    <?php echo $this->Form->input('${1:field_name}', array('type' => 'password', 'label' => false, 'error' => ${2:false}, 'class' => '${3:class_name}')); ?>${0}

snippet formcheckbox
options word
    <?php echo $this->Form->input('${1:field_name}', array('type' => 'checkbox', 'label' => false, 'error' => ${2:false}, 'class' => '${3:class_name}')); ?>${0}

snippet formselect
options word
    <?php echo $this->Form->input('${1:field_name}', array('type' => 'select', 'options' => array(${2:value} => '${3:text}'), 'empty' => ${4:false}, 'label' => false, 'error' => ${5:false}, 'class' => '${6:class_name}')); ?>${0}

snippet formradio
options word
    <?php echo $this->Form->input('${1:field_name}', array('type' => 'radio', 'options' => array(${2:value} => '${3:text}'), 'label' => false, 'legend' => ${4:false}, 'error' => ${5:false}, 'class' => '${6:class_name}')); ?>${0}

snippet formtextarea
options word
    <?php echo $this->Form->input('${1:field_name}', array('type' => 'textarea', 'rows' => ${2:rows}, 'cols' => ${3:cols}, 'maxLength' => ${4:max_length}, 'label' => false, 'error' => ${5:false}, 'class' => '${6:class_name}')); ?>${0}

snippet formhidden
options word
    <?php echo $this->Form->input('${1:field_name}', array('type' => 'hidden', 'label' => false , 'error' => ${2:false})); ?>${0}

snippet formsubmit
options word
    <?php echo $this->Form->submit('${1:caption}', array('class' => '${2}')); ?>${0}

snippet formbutton
options word
    <?php echo $this->Form->button('${1:title}', array('type' => '${2:button/reset/submit}', 'id' => '${3}', 'class' => '${4}', 'escape' => ${5:false})); ?>${0}

snippet formerror
options word
    <?php echo $this->Form->error('${1:field_name}', ${2:null}, array( 'wrap' => '${3:}', 'escape' => ${4:false})); ?>${0}

# --------------------------------------------------
# App
# --------------------------------------------------
snippet import
options word
    App::import('${1:type}', '${2:name}');${0}

# --------------------------------------------------
# Set
# --------------------------------------------------
snippet set_extract
options word
    Set::extract('${1:path}', ${2:array_data});${0}

snippet set_combine
options word
    Set::combine(${1:array_data}, '${2:key_path}', '${3:value_path}','${4:group_path}');${0}

# --------------------------------------------------
# Configure
# --------------------------------------------------
snippet configure_load
options word
    Configure::load('${1:file_name}');${0}

snippet configure_read
options word
    Configure::read('${1:one.two.three.four}');${0}

# --------------------------------------------------
# Router
# --------------------------------------------------
snippet router_url
options word
    Router::url(array('controller' => '${1:controller_name}', 'action' => '${2:action_name}', 'admin' => ${3:false}), false);${0} // ドメインを含むフルパスでURLを取得する場合は第二引数をtrueにする。

# --------------------------------------------------
# misc
# --------------------------------------------------
snippet e
options word
    e(${1});${0}

snippet pr
options word
    pr(${1});${0}

snippet ife
options word
    ife(${1:condition}, ${2:ifNotEmpty}, ${3:ifEmpty});${0}

snippet pe
options word
    <?php e(${1}); ?>${0}

snippet peh
options word
    <?php echo h(${1}); ?>${0}

snippet peharr
options word
    <?php echo h($${1}['${2}']['${3}']); ?>${0}

snippet error
options word
    $this->cakeError('${1:error/error404/error500}', array('${2:param_name}' => '${3:param_value}'));${0}

snippet log
options word
    CakeLog::write(${1:LOG_INFO}, '${2:message}');${0}



# --------------------------------------------------
# Component
# --------------------------------------------------
snippet component
options word
    <?php

    class ${1:component_name}Component extends Object {

		/**
		 * コンポーネントの初期化の時に呼ばれるコールバック。
		 *
		 * @param object $controller コントローラのインスタンス
		 * @param mixed $settings コントローラ内の$componentsプロパティに登録するときに連想配列で受け取るパラメータ。
		 * @return void
		 */
		function initialize(&$controller, $settings) {

		}

		/**
		 * コントローラのbeforeFilter()が呼び出された後に実行されるコールバック。
		 *
		 * @param object $controller コントローラのインスタンス。
		 * @return void
		 */
		function startup(&$controller) {

		}

		/**
		 * コントローラ内でrender()が実行される直前に実行されるコールバック。
		 *
		 * @param object $controller コントローラのインスタンス。
		 * @return void
		 */
		function beforeRender(&$controller) {

		}

		/**
		 * リダイレクト実行直前に呼ばれるコールバック。
		 *
		 * @param object $controller コントローラのインスタンス。
		 * @param mixed $url Controller::redirect()で指定されたURL。Router::url()形式かstring。
		 * @param int $status Controllr::redirect()で指定されたHTTPステータスコード。通常200。
		 * @param bool $exit trueの場合、コントローラ内でexit()が呼び出されることを意味している。
		 * @return void
		 */
		function beforeRedirect(&$controller, $url, $status, $exit) {

		}

		/**
		 * コントローラのafterFilter()が実行される直前に実行されるコールバック。
		 *
		 * @param object $controller コントローラのインスタンス。
		 * @return void
		 */
		function shutdown(&$controller) {

		}
    }
    ${0}

# --------------------------------------------------
# JsHelper
# --------------------------------------------------
snippet js
options word
    <?php
		${0}

		e($js->writeBuffer(array('inline' => true)));
    ?>

snippet jsbuffer
options word
    $js->buffer(${1:script});${0}

snippet jsget
options word
    $js->get("${1:id/class}");${0}

snippet jsevent
options word
    // イベント対象は予め$js->get()で対象にしておく必要がある。
    $js->event("${1:event}", ${2:callback});

snippet jsalert
options word
    $js->alert(${1:message});${0}

snippet jsvalue
options word
    $js->set(${1:mixed});${0}

snippet jsset
options word
    $js->set("${1:key}", ${2:value});${0}

snippet jsset_array
options word
    $js->set(array("${1:key}" => ${2:value}));${0}

snippet jsdomready
options word
    $js->domReady(${1:script});${0}


# --------------------------------------------------
# Ktai Library
# --------------------------------------------------
snippet emoji
options word
    <?php $ktai->emoji(${1}); ?>${0}


# --------------------------------------------------
# php
# --------------------------------------------------
snippet func
options word
	function ${1}(${2}) {
		${0:# code...}
	}

snippet vd
options word
    var_dump( ${1} );${0}

#snippet pfore
#options word
#	<?php foreach ($${1:variable} as $${2:key} => $${3:value}): ?>
#	${0}
#	<?php endforeach ?>

snippet pfore
options word
#この記法にしておけば、=>を入力をガイドしてくれて、不要であればTabで飛ばしてしまえばOK
	<?php foreach ($${1:variable} as $${2:key}${3:#: =>}): ?>
	${0}
	<?php endforeach ?>

snippet pife
options word
	<?php if (${1:condition}): ?>
	${2}
	<?php else: ?>
	${0}
	<?php endif ;?>

snippet pif
options word
	<?php if (${1:condition}): ?>

	<?php endif ;?>

snippet pelse
options word
	<?php else: ?>
